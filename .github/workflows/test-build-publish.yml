name: Test, Build & Publish

on:
  push:
    tags:
      - "v*"
    branches:
      - main

  pull_request:
    branches:
      - "main"
      - "dev"
    paths-ignore:
      - "**/README.md"
      - "**/Makefile"
      - "**/.env.**"
      - "**/docker-compose.*.yml"
      - "**/.vscode"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  run-tests:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: john
          POSTGRES_PASSWORD: pwd0123456789
          POSTGRES_DB: domain_hq_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set up Go
        uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version-file: go.mod

      - name: Run Test
        run: make test
        env:
          DOMAIN_HQ_DB_USERNAME: john
          DOMAIN_HQ_DB_PASSWORD: pwd0123456789
          DOMAIN_HQ_DB_NAME: domain_hq_test

  docker-image-build-publish:
    runs-on: ubuntu-latest
    needs: [run-tests]
    permissions:
      contents: write
      id-token: write # For cosign
      packages: write # For GHCR
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set Metadata
        id: set-metadata
        run: |
          DOCKER_TAGS="unknown"
          VERSION="unknown"
          IMAGE_NAMES="hibare/domainhq ghcr.io/hibare/domainhq"

          if [ "${{ github.event_name }}" == "push" ]; then
            if [ "${{ github.ref }}" == "refs/heads/main" ]; then
              DOCKER_TAGS="next"
              VERSION="next"
            elif [[ "${{ github.ref }}" == "refs/tags/v"* ]]; then
              DOCKER_TAGS="type=semver,pattern={{version}} type=semver,pattern={{major}}"
              VERSION="${GITHUB_REF#refs/tags/v}"
            else
              echo "Unknown ref: ${{ github.ref }}"
              exit 1
            fi
          elif [ "${{ github.event_name }}" == "pull_request" ]; then
            DOCKER_TAGS="test"
            VERSION="test"
          else
            echo "Unknown event: ${{ github.event_name }}"
            exit 1
          fi

          GOLANG_VERSION=$(grep -oP '^go (\d+(\.\d+)*)' go.mod | awk '{print $2}')

          echo "docker_image_names=$IMAGE_NAMES" >> $GITHUB_OUTPUT
          echo "docker_tags=$DOCKER_TAGS" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "golang_version=$GOLANG_VERSION" >> $GITHUB_OUTPUT
        shell: bash

      - name: image-build-publish
        uses: hibare/.github/github/shared-workflows/docker-image-build-publish@3f2aca66510c1847daef4967f5ece127f648292b # v0.4.0
        with:
          image_names: ${{ steps.set-metadata.outputs.docker_image_names }}
          tags: ${{ steps.set-metadata.outputs.docker_tags }}
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm64
          push_dockerhub: ${{ github.event_name != 'pull_request' }}
          push_ghcr: ${{ github.event_name != 'pull_request' }}
          build_args: VERSION=${{ steps.set-metadata.outputs.version }} GOLANG_VERSION=${{ steps.set-metadata.outputs.golang_version }}
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
